<?xml version="1.0" encoding="UTF-8"?>
<!-- 属性描述 scan：性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true scanPeriod:设置监测配置文件是否有修改的时间间隔，
    如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。
    debug:当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。 -->
<configuration scan="true" scanPeriod="60 seconds" debug="false">

    <!-- 日志级别-->
    <property name="ROOT_LEVEL" value="INFO"/>
    <property name="OWNER_LEVEL" value="DEBUG"/>

    <!-- 定义日志文件 输出位置 -->
    <property name="LOG_DIR" value="../test/logs/game-engine"/>
    <!-- 日志文件保留天数 -->
    <property name="MAX_HISTORY" value="60"/>
    <!-- 日志文件大小上限 -->
    <property name="MAX_FILE_SIZE" value="100MB"/>
    <!-- 日志输出格式 -->
    <property name="LOG_PATTERN" value="%d{HH:mm:ss.SSS} %-5level [%thread] %logger{36}:%line - %msg%n"/>

    <!-- ConsoleAppender 控制台输出日志 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
        </encoder>
    </appender>

    <!-- 所有级别日志 appender -->
    <appender name="ALL" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 按天回滚 daily -->
            <fileNamePattern>${LOG_DIR}/%d{yyyy-MM-dd}/all-log-%i.log</fileNamePattern>
            <!-- 日志保留天数 -->
            <maxHistory>${MAX_HISTORY}</maxHistory>
            <!-- 文件大小上限 -->
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>${MAX_FILE_SIZE}</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
        </encoder>
    </appender>

    <!-- ERROR级别日志 -->
    <appender name="ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 只记录ERROR级别的日志 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 按天回滚 daily -->
            <fileNamePattern>${LOG_DIR}/%d{yyyy-MM-dd}/error-log-%i.log</fileNamePattern>
            <!-- 日志保留天数 -->
            <maxHistory>${MAX_HISTORY}</maxHistory>
            <!-- 文件大小上限 -->
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>${MAX_FILE_SIZE}</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
        </encoder>
    </appender>


    <!-- dubbo appender -->
    <appender name="DUBBO" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 按天回滚 daily -->
            <fileNamePattern>${LOG_DIR}/%d{yyyy-MM-dd}/dubbo-log-%i.log</fileNamePattern>
            <!-- 日志保留天数 -->
            <maxHistory>${MAX_HISTORY}</maxHistory>
            <!-- 文件大小上限 -->
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>${MAX_FILE_SIZE}</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
        </encoder>
    </appender>


    <logger name="org.soul">
        <level value="${OWNER_LEVEL}"/>
    </logger>
    <logger name="g">
        <level value="${OWNER_LEVEL}"/>
    </logger>
    <logger name="com.alibaba.dubbo" level="WARN">
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="DUBBO"/>
    </logger>

    <!-- root级别 -->
    <root level="${ROOT_LEVEL}">
        <!-- 控制台输出 -->
        <appender-ref ref="STDOUT"/>
        <!-- 文件输出 -->
        <appender-ref ref="ERROR"/>
        <appender-ref ref="ALL"/>
    </root>
</configuration>