{"version":3,"sources":["assets\\Script\\Objects\\Obj_cell_trend.js"],"names":["cc","Class","extends","Component","properties","_list_labelSort","onLoad","_failColor","Color","_winColor","_failStr","_winStr","labels","node","children","G_TYPE","pokerTypeStr","spade","heart","club","diamond","setData","data","i","length","_setLabelResult","parseInt","labelNode","isWin","color","getComponent","Label","string"],"mappings":";;;;;;AAAA;AACAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,yBAAkB,IADV,EAHP;;AAOL;AACAC,YAAQ,kBAAY;AAChB,aAAKC,UAAL,GAAkB,IAAIP,GAAGQ,KAAP,CAAa,GAAb,EAAiB,GAAjB,EAAqB,GAArB,CAAlB;AACA,aAAKC,SAAL,GAAiB,IAAIT,GAAGQ,KAAP,CAAa,EAAb,EAAgB,GAAhB,EAAoB,GAApB,CAAjB;AACA,aAAKE,QAAL,GAAgB,GAAhB;AACA,aAAKC,OAAL,GAAe,GAAf;;AAEA,aAAKN,eAAL,GAAuB,EAAvB;AACA,YAAIO,SAAS,KAAKC,IAAL,CAAUC,QAAvB;AACA,aAAKT,eAAL,CAAqBU,OAAOC,YAAP,CAAoBC,KAAzC,IAAkDL,OAAO,CAAP,CAAlD;AACA,aAAKP,eAAL,CAAqBU,OAAOC,YAAP,CAAoBE,KAAzC,IAAkDN,OAAO,CAAP,CAAlD;AACA,aAAKP,eAAL,CAAqBU,OAAOC,YAAP,CAAoBG,IAAzC,IAAiDP,OAAO,CAAP,CAAjD;AACA,aAAKP,eAAL,CAAqBU,OAAOC,YAAP,CAAoBI,OAAzC,IAAoDR,OAAO,CAAP,CAApD;AACH,KApBI;;AAsBL;AACAS,aAAU,iBAAUC,IAAV,EAAgB;AACtB,YAAG,CAACA,IAAJ,EAAUA,OAAO,CAAC,CAAC,OAAD,EAAS,CAAT,CAAD,EAAc,CAAC,SAAD,EAAW,CAAX,CAAd,EAA6B,CAAC,MAAD,EAAQ,CAAR,CAA7B,EAAyC,CAAC,OAAD,EAAS,CAAT,CAAzC,CAAP,CADY,CACgE;AACtF,YAAIV,SAAS,KAAKC,IAAL,CAAUC,QAAvB;AACA,aAAI,IAAIS,IAAI,CAAZ,EAAeA,IAAID,KAAKE,MAAxB,EAAgCD,GAAhC,EAAqC;AACjC,iBAAKE,eAAL,CAAqB,KAAKpB,eAAL,CAAqBiB,KAAKC,CAAL,EAAQ,CAAR,CAArB,CAArB,EAAuDG,SAASJ,KAAKC,CAAL,EAAQ,CAAR,CAAT,CAAvD;AACH;AACJ,KA7BI;AA8BL;AACAE,qBAAkB,yBAAUE,SAAV,EAAqBC,KAArB,EAA4B;AAC1C,YAAGA,KAAH,EAAS;AACLD,sBAAUE,KAAV,GAAkB,KAAKpB,SAAvB;AACAkB,sBAAUG,YAAV,CAAuB9B,GAAG+B,KAA1B,EAAiCC,MAAjC,GAA0C,KAAKrB,OAA/C;AACH,SAHD,MAGK;AACDgB,sBAAUE,KAAV,GAAkB,KAAKtB,UAAvB;AACAoB,sBAAUG,YAAV,CAAuB9B,GAAG+B,KAA1B,EAAiCC,MAAjC,GAA0C,KAAKtB,QAA/C;AACH;AACJ;;AAvCI,CAAT","file":"unknown","sourcesContent":["//走势图和账目条目\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        _list_labelSort : null,                                                                                             //整理后的label列表\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        this._failColor = new cc.Color(187,111,110);\r\n        this._winColor = new cc.Color(58,185,250);\r\n        this._failStr = '小';\r\n        this._winStr = '大';\r\n\r\n        this._list_labelSort = {};\r\n        var labels = this.node.children;\r\n        this._list_labelSort[G_TYPE.pokerTypeStr.spade] = labels[0];\r\n        this._list_labelSort[G_TYPE.pokerTypeStr.heart] = labels[1];\r\n        this._list_labelSort[G_TYPE.pokerTypeStr.club] = labels[2];\r\n        this._list_labelSort[G_TYPE.pokerTypeStr.diamond] = labels[3];\r\n    },\r\n\r\n    //设置这个条目中的信息\r\n    setData : function (data) {\r\n        if(!data) data = [['SPADE',1], ['DIAMOND',0], ['CLUB',1], ['HEART',0]];               //胜利是1，失败是0\r\n        var labels = this.node.children;\r\n        for(var i = 0; i < data.length; i ++){\r\n            this._setLabelResult(this._list_labelSort[data[i][0]], parseInt(data[i][1]));\r\n        }\r\n    },\r\n    //设置胜利与否\r\n    _setLabelResult : function (labelNode, isWin) {\r\n        if(isWin){\r\n            labelNode.color = this._winColor;\r\n            labelNode.getComponent(cc.Label).string = this._winStr;\r\n        }else{\r\n            labelNode.color = this._failColor;\r\n            labelNode.getComponent(cc.Label).string = this._failStr;\r\n        }\r\n    },\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n});"]}