{"version":3,"sources":["assets\\Script\\Common\\Managers\\TablesMgr.js"],"names":["tableObj","cc","Class","_nameList","_typeList","_firstDict","_dataDict","_keyList","setData","dataDict","keyList","getDataByID","keyID","data","_parseObj","getKeyList","getFirstData","key","getAllData","index","i","length","curData","console","log","dataObj","_parseByType","type","objName","undefined","parseInt","parseFloat","toString","replace","JSON","parse","e","tableMgr","properties","_tDict","_callFunc","_list_reloadNames","ctor","getTable","tableName","reloadTables","tableNames","callFunc","Object","prototype","call","push","_loadStep","name","splice","_loadTable","loader","loadRes","err","_sortData","bind","xdata","_data","_xData","table","reloadConfigOnStart","G_RES_URL","dict_tablesName","onDestroy","module","exports"],"mappings":"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","file":"unknown","sourcesContent":["//表格操作，读取与解析\r\n\r\n//表格对象，存放着这个表格所有的信息\r\nvar tableObj = cc.Class({\r\n    _nameList           : null,\r\n    _typeList            :null,\r\n    _firstDict           : null,\r\n    _dataDict            : null,\r\n    _keyList            : null,\r\n    setData : function(_nameList, _typeList, dataDict, keyList){\r\n        this._nameList = _nameList;\r\n        this._typeList = _typeList;\r\n        this._firstDict = dataDict;\r\n        this._keyList = keyList;\r\n        this._dataDict = {};\r\n    },\r\n\r\n    getDataByID : function(keyID){\r\n        if(this._dataDict[keyID]) return this._dataDict[keyID];\r\n        var data = this._parseObj(keyID);\r\n        this._dataDict[keyID] = data;\r\n        return data;\r\n    },\r\n    getKeyList : function(){\r\n        return this._keyList;\r\n    },\r\n    //获取第一条信息的值\r\n    getFirstData : function () {\r\n        var data;\r\n        for(var key in this._firstDict){\r\n            data = this.getDataByID(key);\r\n            if(data) break;\r\n        }\r\n        return data;\r\n    },\r\n    //获取所有的表格信息\r\n    getAllData : function () {\r\n        var index, data = {};\r\n        for(var i = 0; i < this._keyList.length; i ++){\r\n            index = this._keyList[i];\r\n            data[index] = this.getDataByID(index);\r\n        }\r\n        return data;\r\n    },\r\n\r\n    _parseObj : function(keyID){\r\n        if(!this._firstDict) return null;\r\n        var curData = this._firstDict[keyID];\r\n        if(!curData){\r\n            console.log('table parse _____ no this key :' + keyID)\r\n            return null;\r\n        }\r\n        var dataObj = {};\r\n        //第一个ID的值忽略\r\n        for(var i = 1; i < curData.length; i ++){\r\n            var data = this._parseByType(curData[i], this._typeList[i], this._nameList[i]);\r\n            dataObj[this._nameList[i]] = data;\r\n        }\r\n        return dataObj;\r\n    },\r\n    _parseByType : function(data, type, objName){\r\n        if(data == undefined || data == null) return null;\r\n\r\n        try {\r\n            switch (type) {\r\n                case 'key_int':\r\n                    return parseInt(data);\r\n                case 'number':\r\n                    return parseFloat(data);\r\n                case 'string':\r\n                    return data.toString();\r\n                case 'json':\r\n                    data = data.replace(/\\'/g,'\\\"');\r\n                    return JSON.parse(data);\r\n                case 'calculate':\r\n                    return data.toString();\r\n\r\n                default:\r\n                    return null;\r\n            }\r\n        } catch (e) {\r\n            console.log(e)\r\n            // console.log('table parse _______ fileName =' + this._fileName + ';  objName =' + objName + ';  error obj =' + data)\r\n            return null;\r\n        }\r\n    },\r\n\r\n})\r\n\r\n//表格管理器\r\nvar tableMgr = cc.Class({\r\n    //extends : cc.Component,\r\n    properties: {\r\n        _tDict : null,\r\n        _callFunc : null,\r\n        _list_reloadNames : null,\r\n    },\r\n    ctor : function () {\r\n        //GG.tableMgr = this;\r\n    },\r\n    getTable : function(tableName){\r\n        return this._tDict[tableName];\r\n    },\r\n\r\n    //导入表格\r\n    reloadTables : function (tableNames, callFunc) {\r\n        var type = Object.prototype.toString.call(tableNames);\r\n        switch (type){\r\n            case '[object String]':\r\n                this._list_reloadNames = [tableNames];\r\n                break;\r\n            case '[object Array]':\r\n                this._list_reloadNames = tableNames;\r\n                break;\r\n            case '[object Object]':\r\n                this._list_reloadNames = [];\r\n                for(var key in tableNames){this._list_reloadNames.push(tableNames[key]);}\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n        this._callFunc = callFunc;\r\n        this._loadStep();\r\n    },\r\n    _loadStep : function () {\r\n        if(this._list_reloadNames.length <= 0){\r\n            if(this._callFunc) {\r\n                this._callFunc();\r\n                this._callFunc = null;\r\n            }\r\n            return\r\n        }\r\n        //var name = this._list_reloadNames[0];\r\n        var name=this._list_reloadNames.splice(0,1);\r\n        this._loadTable(name);\r\n    },\r\n    _loadTable : function (tableName) {\r\n        if(this._tDict && this._tDict[tableName]) {\r\n            this._loadStep();\r\n            return;\r\n        }\r\n        cc.loader.loadRes(\"Tables/\"+tableName, function (err, data) {\r\n            if(err){\r\n                console.log(err)\r\n                if(this._callFunc) {\r\n                    this._callFunc();\r\n                    this._callFunc = null;\r\n                }\r\n            }else{\r\n                if(!this._tDict) this._tDict = {};\r\n                this._tDict[tableName] = this._sortData(data);\r\n                this._loadStep();\r\n            }\r\n        }.bind(this));\r\n    },\r\n\r\n    _sortData : function(xdata){\r\n        if(!xdata) {\r\n            console.log('table is null')\r\n            return null;\r\n        }\r\n        this._data = xdata;\r\n        var _nameList, _typeList;\r\n        var _xData = {};\r\n        var _keyList = [];\r\n        for(var i = 0; i < xdata.length; i ++){\r\n            switch (i){\r\n                case 0:\r\n                    //tips\r\n                    break;\r\n                case 1:\r\n                    //dataName\r\n                    _nameList = xdata[i];\r\n                    break;\r\n                case 2:\r\n                    //dataType\r\n                    _typeList = xdata[i];\r\n                    break;\r\n                default:\r\n                    //dataDetail\r\n                    var keyID = xdata[i][0];\r\n                    _keyList.push(keyID);\r\n                    _xData[keyID] = xdata[i];\r\n                    break;\r\n            }\r\n        }\r\n\r\n        var table = new tableObj();\r\n        table.setData(_nameList, _typeList, _xData, _keyList);\r\n        return table;\r\n    },\r\n\r\n    //游戏一开始加载所有的配置\r\n    reloadConfigOnStart : function (callFunc) {\r\n        this.reloadTables(G_RES_URL.dict_tablesName, callFunc);\r\n    },\r\n    \r\n    onDestroy : function () {\r\n        //for(var tableName in this._tDict){\r\n        //    cc.loader.release(\"Tables/\"+tableName);\r\n        //}\r\n    }\r\n})\r\n\r\nmodule.exports = tableMgr;"]}