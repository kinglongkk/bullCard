{"version":3,"sources":["assets\\Script\\Objects\\Obj_topOneLayer.js"],"names":["cc","Class","extends","Component","properties","_isConfirmTipOpen","_isHasOpen","prefab_loadingAni","default","type","Prefab","displayName","onLoad","_touchLimitLayer","getComponent","start","_registerFunc","showNetRequest","isShowTip","_netAni","instantiate","parent","node","active","center","visibleRect","position","p","x","y","_showReconnectTip","dragonBones","ArmatureDisplay","playAnimation","addTouchLimit","closeNetRequest","cancelTouchLimit","isShow","tipNode","getChildByName","content","tableData","G_DATA","getChinese","Label","string","isRegister","GG","tipsMgr","registerConfirm","_whenConfirmTipChange","bind","isOpen","Boolean","onDestroy"],"mappings":"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","file":"unknown","sourcesContent":["//游戏场景中最上面的那个层\r\n\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        _isConfirmTipOpen : null,                                                                                       //提示窗口是否已经打开\r\n        _isHasOpen : null,                                                                                               //提示窗口是否已经打开\r\n\r\n        prefab_loadingAni : {\r\n            default : null,\r\n            type : cc.Prefab,\r\n            displayName : '网络请求动画'\r\n        }\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        // GG.topTouchLayer = this;\r\n\r\n        this._isConfirmTipOpen = false;\r\n        this._touchLimitLayer = this.getComponent('Obj_touchLimit');\r\n    },\r\n\r\n    start : function () {\r\n        this._registerFunc(true);\r\n    },\r\n\r\n    //显示请求网络的动画\r\n    showNetRequest : function (isShowTip) {\r\n        if(!this.prefab_loadingAni) return;\r\n        if(!this._netAni){\r\n            this._netAni = cc.instantiate(this.prefab_loadingAni);\r\n            this._netAni.parent = this.node;\r\n            //this._netAni.active = false;\r\n        }\r\n        if(this._netAni.active) return;\r\n        if(this._isConfirmTipOpen){\r\n            //弹窗已经存在\r\n            this._isHasOpen = true;\r\n            return\r\n        }\r\n        this._netAni.active = true;\r\n        var center = cc.visibleRect.center;\r\n        this._netAni.position = cc.p(center.x, center.y*1.35)\r\n        this._showReconnectTip(isShowTip);\r\n        this._netAni.getComponent(dragonBones.ArmatureDisplay).playAnimation('');\r\n        if(this._touchLimitLayer) this._touchLimitLayer.addTouchLimit();\r\n    },\r\n\r\n    closeNetRequest : function () {\r\n        if(this._netAni){\r\n            this._netAni.active = false;\r\n            if(this._touchLimitLayer) this._touchLimitLayer.cancelTouchLimit();\r\n        }\r\n    },\r\n\r\n    //显示重连提示\r\n    _showReconnectTip : function (isShow) {\r\n        var tipNode = this._netAni.getChildByName('tip');\r\n        if(tipNode){\r\n            var content;\r\n            if(isShow) {\r\n                var tableData = G_DATA.getChinese(61);\r\n                content =tableData.content;\r\n            }else content = '';\r\n            tipNode.getComponent(cc.Label).string = content;\r\n        }\r\n    },\r\n\r\n    //注册确认窗口的监听\r\n    _registerFunc : function (isRegister) {\r\n        if(GG.tipsMgr){\r\n            GG.tipsMgr.registerConfirm(this._whenConfirmTipChange.bind(this), isRegister);\r\n        }\r\n    },\r\n\r\n    //当窗口打开或者关闭\r\n    _whenConfirmTipChange : function (isOpen) {\r\n        this._isConfirmTipOpen = isOpen;\r\n        if(this._netAni.active){\r\n            //当显示连接的时候\r\n            if(isOpen) {\r\n                this._isHasOpen = true;\r\n                this.closeNetRequest();\r\n            }\r\n        }else{\r\n            if(!isOpen){\r\n                if(this._isHasOpen){\r\n                    var tipNode = this._netAni.getChildByName('tip');\r\n                    var isShow = false;\r\n                    if(tipNode){\r\n                        isShow = Boolean(tipNode.getComponent(cc.Label).string)\r\n                    }\r\n                    this.showNetRequest(isShow);\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    onDestroy : function () {\r\n        this._registerFunc(false);\r\n    },\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    // update: function (dt) {\r\n\r\n    // },\r\n});\r\n"]}