{"version":3,"sources":["assets\\Script\\Views\\UIComponents\\Prefab_roomList.js"],"names":["cc","Class","extends","require","properties","_dict_loadScene","_loadingScene","prefab_item","default","type","Prefab","displayName","comp_itemContainer","node_roomName","Node","onLoad","_dealerItemCompName","dataObj","itemPrefab","lineNum","scrollType","G_TYPE","bag","setData","setDataList","G_DATA","getRoomListJson","jsonConfig","setRoomList","data","enterType","G_Config_common","isLocal","_getLocalJson","bind","_reloadScene","dataList","_showRoomName","i","configPageNum","rowNum","_resortDataList","item","comp","length","getItemByIndex","getComponent","clearItems","scrollToUp","dict","minLimitPlayerBlance","_doBalancePush","newList","keyList","Object","keys","sort","first","second","f","parseInt","s","roomDataList","_isHaveChild","target","splice","push","jsonObj","key","list","firstLen","id","self","sceneName","loadingScene","director","preloadScene","sceneType","grabNode","getChildByName","bullNode","gameModule","bull100","active","classic","grab"],"mappings":"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","file":"unknown","sourcesContent":["//存放所有的房间列表\r\ncc.Class({\r\n    extends: require('BaseUI'),\r\n\r\n    properties: {\r\n        _dict_loadScene : null,                                                                                         //是否已经预加载需要的场景\r\n        _loadingScene : null,\r\n\r\n        prefab_item : {\r\n            default : null,\r\n            type : cc.Prefab,\r\n            displayName : '房间预制体'\r\n        },\r\n        comp_itemContainer : {\r\n            default : null,\r\n            type : require('Obj_dealScroll'),\r\n            displayName : '房间列表容器'\r\n        },\r\n        node_roomName : {\r\n            default : null,\r\n            type : cc.Node,\r\n            displayName : '房间列表名称'\r\n        },\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        this._dealerItemCompName = 'Obj_roomListCell';\r\n        this._dict_loadScene = {};\r\n        //设置滚动层信息\r\n        var dataObj = {\r\n            itemPrefab : this.prefab_item,\r\n            lineNum : 3,\r\n            scrollType : G_TYPE.scrollType.bag,\r\n        }\r\n        this.comp_itemContainer.setData(dataObj);\r\n    },\r\n\r\n    setDataList : function (dataObj) {\r\n        if(!dataObj) return;\r\n        // this.showLayer();\r\n        G_DATA.getRoomListJson(function (jsonConfig) {\r\n            if(jsonConfig){\r\n                this.setRoomList(dataObj.data, dataObj.enterType, jsonConfig);\r\n            }else{\r\n                if(G_Config_common.isLocal){\r\n                    jsonConfig = this._getLocalJson();\r\n                    this.setRoomList(dataObj.data, dataObj.enterType, jsonConfig);\r\n                }else{\r\n                    //无法正常加载房间配置\r\n                }\r\n            }\r\n        }.bind(this))\r\n        this._reloadScene();\r\n    },\r\n\r\n    setRoomList : function (dataList, enterType, jsonConfig) {\r\n        this._showRoomName(enterType);\r\n        var i = 0, configPageNum = 6, rowNum;\r\n        if(dataList) {\r\n            dataList = this._resortDataList(dataList);\r\n            var item, comp, dataObj;\r\n            for(i = 0; i < dataList.length; i ++){\r\n                item = this.comp_itemContainer.getItemByIndex(i);\r\n                if(item){\r\n                    comp = item.getComponent(this._dealerItemCompName);\r\n                    dataObj = dataList[i];\r\n                    dataObj.enterType = enterType;\r\n                    // comp.setData(dataObj, jsonConfig[dataObj.id]);\r\n                    rowNum =(i+1)%configPageNum;\r\n                    comp.setData(dataObj, jsonConfig[rowNum == 0 ? configPageNum : rowNum]);\r\n                }\r\n            }\r\n        }\r\n        this.comp_itemContainer.clearItems(i -1);\r\n        this.comp_itemContainer.scrollToUp();\r\n    },\r\n\r\n    // _resortDataList : function (dataList) {\r\n    //     var newList = [];\r\n    //     while (dataList.length > 0){\r\n    //         newList = newList.concat(this._getOneTypeList(dataList));\r\n    //     }\r\n    //     return newList;\r\n    // },\r\n    //\r\n    // _getOneTypeList : function (dataList) {\r\n    //     var copyValue = null, dataObj, newList = [];\r\n    //     for(var i = dataList.length-1; i > -1; i --){\r\n    //         dataObj = dataList[i];\r\n    //         if(copyValue !== dataObj.minLimitPlayerBlance){\r\n    //             copyValue = dataObj.minLimitPlayerBlance\r\n    //             var targetNum = dataList.splice(i, 1)[0];\r\n    //             newList.splice(0,0, targetNum);\r\n    //         }\r\n    //     }\r\n    //     return newList\r\n    // },\r\n\r\n    _resortDataList : function (dataList) {\r\n        var dict = {};\r\n        var dataObj;\r\n        for(var i = dataList.length-1; i > -1; i --){\r\n            dataObj = dataList[i];\r\n            if(!dict[dataObj.minLimitPlayerBlance]){\r\n                dict[dataObj.minLimitPlayerBlance] = []\r\n            }\r\n            this._doBalancePush(dict[dataObj.minLimitPlayerBlance], dataObj);\r\n        }\r\n\r\n        var newList = [];\r\n        var keyList = Object.keys(dict);\r\n        keyList.sort (function (first, second){\r\n            var f = parseInt (first, 10), s = parseInt (second, 10);\r\n            if (f < s) {\r\n                return -1;\r\n            } else if (f > s) {\r\n                return 1;\r\n            } else {\r\n                return 0;\r\n            }\r\n        });\r\n        var roomDataList;\r\n        while (this._isHaveChild(dict)){\r\n            for(var i = 0; i < keyList.length; i ++){\r\n                roomDataList = dict[keyList[i]];\r\n                if(!roomDataList) continue;\r\n                if(roomDataList.length < 1){\r\n                    delete dict[keyList[i]]\r\n                }else{\r\n                    var target = roomDataList.splice(0,1)[0];\r\n                    if(target) newList.push(target)\r\n                }\r\n            }\r\n        }\r\n\r\n        return newList\r\n    },\r\n\r\n    _isHaveChild : function (jsonObj) {\r\n        for(var key in jsonObj){\r\n            if(jsonObj[key]){\r\n                return true\r\n            }\r\n        }\r\n        return false\r\n    },\r\n\r\n    _doBalancePush : function (list, dataObj) {\r\n        var firstLen = list.length;\r\n        for(var i = 0; i < firstLen; i ++){\r\n            if(dataObj.id < list[i].id){\r\n                list.splice(i,0,dataObj);\r\n                break;\r\n            }\r\n        }\r\n        if(firstLen == list.length){\r\n            //没有增加\r\n            list.push(dataObj)\r\n        }\r\n    },\r\n\r\n    //预加载场景\r\n    _reloadScene : function () {\r\n        if(!this._loadingScene){\r\n            var self = this;\r\n            var sceneName = G_TYPE.sceneName.loadingScene;\r\n            cc.director.preloadScene(sceneName, function () {\r\n                self._loadingScene = true;\r\n            });\r\n        }\r\n    },\r\n\r\n    //=====================================显示房间名\r\n\r\n    _showRoomName : function (sceneType) {\r\n        var grabNode = this.node_roomName.getChildByName('grab');\r\n        var bullNode = this.node_roomName.getChildByName('bull100');\r\n        if(!grabNode || !bullNode) return;\r\n        switch (parseInt(sceneType)){\r\n            case G_TYPE.gameModule.bull100:\r\n                bullNode.active = true;\r\n                grabNode.active = false;\r\n                break\r\n            case G_TYPE.gameModule.classic:\r\n\r\n                break\r\n            case G_TYPE.gameModule.grab:\r\n                var grabNode = this.node_roomName.getChildByName('grab');\r\n                grabNode.active = true;\r\n                bullNode.active = false;\r\n                break\r\n            default:\r\n                break\r\n        }\r\n    },\r\n\r\n    _getLocalJson : function () {\r\n        return {\r\n            \"1\": {\r\n                \"txtImgUrl\": \"images/room/name/platform_room_n_7.png\",\r\n                \"bgImgUrl\": \"images/room/bg/platform_room_b_1000.png\"\r\n            },\r\n            \"2\": {\r\n                \"txtImgUrl\": \"images/room/name/platform_room_n_8.png\",\r\n                \"bgImgUrl\": \"images/room/bg/platform_room_b_2000.png\"\r\n            },\r\n            \"3\": {\r\n                \"txtImgUrl\": \"images/room/name/platform_room_n_11.png\",\r\n                \"bgImgUrl\": \"images/room/bg/platform_room_b_20000.png\"\r\n            },\r\n            \"4\": {\r\n                \"txtImgUrl\": \"images/room/name/platform_room_n_9.png\",\r\n                \"bgImgUrl\": \"images/room/bg/platform_room_b_5000.png\"\r\n            },\r\n            \"5\": {\r\n                \"txtImgUrl\": \"images/room/name/platform_room_n_12.png\",\r\n                \"bgImgUrl\": \"images/room/bg/platform_room_b_50000.png\"\r\n            },\r\n            \"6\": {\r\n                \"txtImgUrl\": \"images/room/name/platform_room_n_10.png\",\r\n                \"bgImgUrl\": \"images/room/bg/platform_room_b_10000.png\"\r\n            },\r\n            \"7\": {\r\n                \"txtImgUrl\": \"images/room/name/platform_room_n_7.png\",\r\n                \"bgImgUrl\": \"images/room/bg/platform_room_b_1000.png\"\r\n            },\r\n        }\r\n    },\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    // update: function (dt) {\r\n\r\n    // },\r\n});\r\n"]}