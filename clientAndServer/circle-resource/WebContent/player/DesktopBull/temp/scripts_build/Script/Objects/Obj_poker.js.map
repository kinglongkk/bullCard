{"version":3,"sources":["assets\\Script\\Objects\\Obj_poker.js"],"names":["cc","Class","extends","Component","_isMyself","_ownPlayer","_isChoose","_callFunc","_pokerValue","_pokerType","_label_value","properties","node_pokerPlus","Node","node_pokerNegative","node_pokerValue","node_minIcon","node_maxIcon","node_specialIcon","frame_pokerUI","SpriteAtlas","font_black","Font","font_red","onLoad","_init","getComponent","Label","_sprite_min","Sprite","_sprite_max","_openPokerTime","G_Config_common","time_pokerOpen","_classic_otherScale","G_Config_classic","scale_noMyPoker","_classic_flyTime","time_pokerFly","_classic_moveUp","num_pokerUp","active","bindPlayer","player","showPokerNegative","y","scale","showPokerPlus","flyPoker","startPos","targetPos","isMyself","onClear","node","position","curPosX","x","act1","moveTo","runAction","sequence","callFunc","_flyPokerEnd","openPoker","addFlyEndPoker","callBack","rotate1","scaleTo","_openPoker_showValue","scaleX","_openPoker_end","setPokerInfo","pokerType","pokerValue","isOpen","G_TYPE","block","font","spriteFrame","getSpriteFrame","G_RES_URL","blockMin","blockMax","blackHeart","blackHeartMin","blackHeartMax","redHeart","redHeartMin","redHeartMax","flower","flowerMin","flowerMax","realyValue","string","getPokerValue","getPokerType","getPokerSize","getContentSize","getIsBlack","isBlackColor","setPokerTouchEnable","isEnable","on","EventType","TOUCH_START","_callback_clickPoker","off","event","poker","target","touchThePokerDown","value","isOk","touchThePokerUp","clearAllActions","stopAllActions","onDestroy"],"mappings":";;;;;;AAAA;;AAEAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;AAELC,eAAY,IAFP,EAE2C;AAChDC,gBAAa,IAHR,EAG2C;AAChDC,eAAY,IAJP,EAI2C;AAChDC,eAAY,IALP,EAK4C;AACjDC,iBAAc,IANT,EAM2C;AAChDC,gBAAa,IAPR,EAO2C;AAChDC,kBAAe,IARV,EAQ2C;AAChDC,gBAAY;AACRC,wBAAiBZ,GAAGa,IADZ;AAERC,4BAAqBd,GAAGa,IAFhB;AAGRE,yBAAkBf,GAAGa,IAHb;AAIRG,sBAAehB,GAAGa,IAJV;AAKRI,sBAAejB,GAAGa,IALV;AAMRK,0BAAmBlB,GAAGa,IANd;AAORM,uBAAgBnB,GAAGoB,WAPX,EAOoC;AAC5CC,oBAAarB,GAAGsB,IARR,EAQoC;AAC5CC,kBAAWvB,GAAGsB,IATN,EATP;;AAqBL;AACAE,YAAQ,kBAAY;AAChB,aAAKC,KAAL;;AAEA;AACH,KA1BI;;AA4BLA,WAAQ,iBAAY;AAChB,aAAKnB,SAAL,GAAiB,KAAjB;;AAEA,aAAKI,YAAL,GAAoB,KAAKK,eAAL,CAAqBW,YAArB,CAAkC1B,GAAG2B,KAArC,CAApB;AACA,aAAKC,WAAL,GAAmB,KAAKZ,YAAL,CAAkBU,YAAlB,CAA+B1B,GAAG6B,MAAlC,CAAnB;AACA,aAAKC,WAAL,GAAmB,KAAKb,YAAL,CAAkBS,YAAlB,CAA+B1B,GAAG6B,MAAlC,CAAnB;AACA,aAAKE,cAAL,GAAsBC,gBAAgBC,cAAtC;AACA,aAAKC,mBAAL,GAA2BC,iBAAiBC,eAA5C;AACA,aAAKC,gBAAL,GAAwBF,iBAAiBG,aAAzC;AACA,aAAKC,eAAL,GAAuBJ,iBAAiBK,WAAxC;;AAEA,aAAK5B,cAAL,CAAoB6B,MAApB,GAA6B,IAA7B;AACH,KAxCI;;AA0CLC,gBAAa,oBAAUC,MAAV,EAAkB;AAC3B,aAAKtC,UAAL,GAAkBsC,MAAlB;AACH,KA5CI;;AA8CL;AACAC,uBAAoB,6BAAY;AAC5B,aAAKhC,cAAL,CAAoBiC,CAApB,GAAwB,CAAxB;AACA,aAAKjC,cAAL,CAAoBkC,KAApB,GAA4B,CAA5B;AACA;;AAEA,aAAKhC,kBAAL,CAAwB2B,MAAxB,GAAiC,IAAjC;AACA,aAAK3B,kBAAL,CAAwBgC,KAAxB,GAAgC,CAAhC;AACH,KAtDI;AAuDLC,mBAAgB,yBAAY;AACxB;AACA,YAAI,KAAKjC,kBAAT,EAA6B,KAAKA,kBAAL,CAAwB2B,MAAxB,GAAiC,KAAjC;AAChC,KA1DI;;AA6DL;;AAEA;AACAO,cAAW,kBAAUC,QAAV,EAAoBC,SAApB,EAA+BC,QAA/B,EAAyC;AAChD,aAAKC,OAAL;AACA,aAAKR,iBAAL;AACA,aAAKxC,SAAL,GAAiB+C,QAAjB;AACA,YAAG,CAAC,KAAK/C,SAAT,EAAmB;AACf;AACA,iBAAKiD,IAAL,CAAUP,KAAV,GAAkB,KAAKZ,mBAAvB;AACH;;AAED,aAAKmB,IAAL,CAAUC,QAAV,GAAqBL,QAArB;AACA,YAAIM,UAAUL,UAAUM,CAAxB,CAVgD,CAUtB;AAC1B,YAAIC,OAAOzD,GAAG0D,MAAH,CAAU,KAAKrB,gBAAf,EAAiCkB,OAAjC,EAA0CL,UAAUL,CAApD,CAAX;AACA,YAAIY,OAAOzD,GAAG0D,MAAH,CAAU,GAAV,EAAeH,OAAf,EAAwBL,UAAUL,CAAlC,CAAX;AACA,aAAKQ,IAAL,CAAUM,SAAV,CAAoB3D,GAAG4D,QAAH,CAAYH,IAAZ,EAAkBzD,GAAG6D,QAAH,CAAY,KAAKC,YAAjB,EAA+B,IAA/B,CAAlB,CAApB;AACH,KA9EI;AA+ELA,kBAAe,wBAAY;AACvB,YAAG,KAAK1D,SAAR,EAAkB,KAAK2D,SAAL;;AAElB,aAAK1D,UAAL,CAAgB2D,cAAhB;AACH,KAnFI;;AAqFL;;AAEA;AACAD,eAAY,mBAAUE,QAAV,EAAoB;AAC5B,YAAG,KAAKnD,kBAAL,CAAwB2B,MAAxB,KAAmC,KAAtC,EAA6C,OAAO,KAAP;AAC7C,aAAK3B,kBAAL,CAAwB2B,MAAxB,GAAiC,KAAjC;AACA,aAAK7B,cAAL,CAAoB6B,MAApB,GAA6B,KAA7B;AACA,aAAKlC,SAAL,GAAiB0D,QAAjB;AACA,aAAKrB,iBAAL;;AAEA,YAAIsB,UAAUlE,GAAGmE,OAAH,CAAW,KAAKpC,cAAL,GAAoB,GAA/B,EAAoC,CAApC,EAAuC,CAAvC,CAAd;AACA,aAAKjB,kBAAL,CAAwB6C,SAAxB,CAAkC3D,GAAG4D,QAAH,CAAYM,OAAZ,EAAqBlE,GAAG6D,QAAH,CAAY,KAAKO,oBAAjB,EAAuC,IAAvC,CAArB,CAAlC;AACA,eAAO,IAAP;AACH,KAlGI;AAmGLA,0BAAuB,gCAAY;AAC/B,aAAKtD,kBAAL,CAAwB2B,MAAxB,GAAiC,KAAjC;AACA,aAAK7B,cAAL,CAAoB6B,MAApB,GAA6B,IAA7B;AACA,aAAK7B,cAAL,CAAoByD,MAApB,GAA6B,CAA7B;AACA,YAAIH,UAAUlE,GAAGmE,OAAH,CAAW,KAAKpC,cAAL,GAAoB,GAA/B,EAAoC,CAApC,EAAuC,CAAvC,CAAd;AACA,aAAKnB,cAAL,CAAoB+C,SAApB,CAA8B3D,GAAG4D,QAAH,CAAYM,OAAZ,EAAqBlE,GAAG6D,QAAH,CAAY,KAAKS,cAAjB,EAAiC,IAAjC,CAArB,CAA9B;AACH,KAzGI;AA0GLA,oBAAiB,0BAAY;AACzB;AACA,YAAG,KAAK/D,SAAR,EAAmB,KAAKA,SAAL;AACnB,aAAKA,SAAL,GAAiB,IAAjB;AACH,KA9GI;;AAgHL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACAgE,kBAAe,sBAAUC,SAAV,EAAqBC,UAArB,EAAiCC,MAAjC,EAAyC;AACpD,aAAKrB,IAAL,CAAUZ,MAAV,GAAmB,IAAnB;AACA,aAAKxB,YAAL,CAAkBwB,MAAlB,GAA2B,IAA3B;AACA,YAAI,KAAKvB,gBAAT,EAA2B,KAAKA,gBAAL,CAAsBuB,MAAtB,GAA+B,KAA/B;AAC3B,aAAKjC,WAAL,GAAmBiE,UAAnB;AACA,aAAKhE,UAAL,GAAkB+D,SAAlB;AACA,YAAGE,MAAH,EAAW,KAAK3B,aAAL,GAAX,KACK,KAAKH,iBAAL;;AAEL;AACA,gBAAQ4B,SAAR;AACI,iBAAKG,OAAOH,SAAP,CAAiBI,KAAtB;AACI;AACA,qBAAKlE,YAAL,CAAkBmE,IAAlB,GAAyB,KAAKtD,QAA9B;AACA,qBAAKK,WAAL,CAAiBkD,WAAjB,GAA+B,KAAK3D,aAAL,CAAmB4D,cAAnB,CAAkCC,UAAUR,SAAV,CAAoBS,QAAtD,CAA/B;AACA,qBAAKnD,WAAL,CAAiBgD,WAAjB,GAA+B,KAAK3D,aAAL,CAAmB4D,cAAnB,CAAkCC,UAAUR,SAAV,CAAoBU,QAAtD,CAA/B;AACA;AACJ,iBAAKP,OAAOH,SAAP,CAAiBW,UAAtB;AACI;AACA,qBAAKzE,YAAL,CAAkBmE,IAAlB,GAAyB,KAAKxD,UAA9B;AACA,qBAAKO,WAAL,CAAiBkD,WAAjB,GAA+B,KAAK3D,aAAL,CAAmB4D,cAAnB,CAAkCC,UAAUR,SAAV,CAAoBY,aAAtD,CAA/B;AACA,qBAAKtD,WAAL,CAAiBgD,WAAjB,GAA+B,KAAK3D,aAAL,CAAmB4D,cAAnB,CAAkCC,UAAUR,SAAV,CAAoBa,aAAtD,CAA/B;AACA;AACJ,iBAAKV,OAAOH,SAAP,CAAiBc,QAAtB;AACI;AACA,qBAAK5E,YAAL,CAAkBmE,IAAlB,GAAyB,KAAKtD,QAA9B;AACA,qBAAKK,WAAL,CAAiBkD,WAAjB,GAA+B,KAAK3D,aAAL,CAAmB4D,cAAnB,CAAkCC,UAAUR,SAAV,CAAoBe,WAAtD,CAA/B;AACA,qBAAKzD,WAAL,CAAiBgD,WAAjB,GAA+B,KAAK3D,aAAL,CAAmB4D,cAAnB,CAAkCC,UAAUR,SAAV,CAAoBgB,WAAtD,CAA/B;AACA;AACJ,iBAAKb,OAAOH,SAAP,CAAiBiB,MAAtB;AACI;AACA,qBAAK/E,YAAL,CAAkBmE,IAAlB,GAAyB,KAAKxD,UAA9B;AACA,qBAAKO,WAAL,CAAiBkD,WAAjB,GAA+B,KAAK3D,aAAL,CAAmB4D,cAAnB,CAAkCC,UAAUR,SAAV,CAAoBkB,SAAtD,CAA/B;AACA,qBAAK5D,WAAL,CAAiBgD,WAAjB,GAA+B,KAAK3D,aAAL,CAAmB4D,cAAnB,CAAkCC,UAAUR,SAAV,CAAoBmB,SAAtD,CAA/B;AACA;AAxBR;AA0BA;AACA,YAAIC,UAAJ;AACA,gBAAQnB,UAAR;AACI,iBAAK,CAAL;AACImB,6BAAa,GAAb;AACA;AACJ,iBAAK,EAAL;AACIA,6BAAa,GAAb;AACA;AACJ,iBAAK,EAAL;AACIA,6BAAa,GAAb;AACA;AACA;AACA;AACA;AACJ,iBAAK,EAAL;AACIA,6BAAa,GAAb;AACA;AACA;AACA;AACA;AACJ,iBAAK,EAAL;AACIA,6BAAa,GAAb;AACA;AACA;AACA;AACA;AACJ;AACIA,6BAAanB,UAAb;AACA;AA3BR;;AA8BA,aAAK/D,YAAL,CAAkBmF,MAAlB,GAA2BD,UAA3B;AACH,KAlMI;;AAqML;;AAEAE,mBAAgB,yBAAY;AACxB,eAAO,KAAKtF,WAAZ;AACH,KAzMI;;AA2MLuF,kBAAe,wBAAY;AACvB,eAAO,KAAKtF,UAAZ;AACH,KA7MI;;AA+MLuF,kBAAe,wBAAY;AACvB,eAAO,KAAKlF,kBAAL,CAAwBmF,cAAxB,EAAP;AACH,KAjNI;;AAmNL;AACAC,gBAAa,sBAAY;AACrB,eAAO,KAAKC,YAAZ;AACH,KAtNI;;AAwNL;AACAC,yBAAsB,6BAAUC,QAAV,EAAoB;AACtC,YAAGA,QAAH,EAAY;AACR,iBAAKzF,cAAL,CAAoB0F,EAApB,CAAuBtG,GAAGa,IAAH,CAAQ0F,SAAR,CAAkBC,WAAzC,EAAsD,KAAKC,oBAA3D,EAAiF,IAAjF;AACH,SAFD,MAEK;AACD,iBAAK7F,cAAL,CAAoB8F,GAApB,CAAwB1G,GAAGa,IAAH,CAAQ0F,SAAR,CAAkBC,WAA1C,EAAuD,KAAKC,oBAA5D,EAAkF,IAAlF;AACH;AACJ,KA/NI;;AAiOL;AACAA,0BAAuB,8BAAUE,KAAV,EAAiB;AACpC,YAAIC,QAAQD,MAAME,MAAlB;AACA,YAAG,KAAKvG,SAAR,EAAkB;AACdsG,kBAAM/D,CAAN,IAAW,KAAKN,eAAhB;AACA,iBAAKjC,SAAL,GAAiB,KAAjB;AACA,iBAAKD,UAAL,CAAgByG,iBAAhB;AACH,SAJD,MAIK;AACD,gBAAIC,QAAQ,KAAKjB,aAAL,EAAZ;AACA,gBAAGiB,QAAQ,EAAX,EAAeA,QAAQ,EAAR;AACf,gBAAIC,OAAO,KAAK3G,UAAL,CAAgB4G,eAAhB,CAAgCF,KAAhC,CAAX;AACA,gBAAGC,IAAH,EAAQ;AACJJ,sBAAM/D,CAAN,IAAW,KAAKN,eAAhB;AACA,qBAAKjC,SAAL,GAAiB,IAAjB;AACH;AACJ;AACJ,KAjPI;;AAmPL8C,aAAU,mBAAY;AAClB,aAAK9C,SAAL,GAAiB,KAAjB;AACA,aAAK+C,IAAL,CAAUP,KAAV,GAAkB,CAAlB;AACH,KAtPI;;AAwPLoE,qBAAkB,2BAAY;AAC1B,aAAKpG,kBAAL,CAAwBqG,cAAxB;AACA,aAAKvG,cAAL,CAAoBuG,cAApB;AACA,aAAK9D,IAAL,CAAU8D,cAAV;AACH,KA5PI;;AA8PL;AACA;;AAEA;;AAEAC,eAAY,qBAAY;AACpB;AACH;AArQI,CAAT","file":"unknown","sourcesContent":["//使用的卡牌对象\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n    _isMyself : null,                               //是否是玩家自己\r\n    _ownPlayer : null,                              //属于哪个玩家\r\n    _isChoose : null,                               //是否被选中\r\n    _callFunc : null,                                //开牌动作的回调\r\n    _pokerValue : null,                             //卡牌的值\r\n    _pokerType : null,                              //卡牌的类型\r\n    _label_value : null,                            //显示牌值的label\r\n    properties: {\r\n        node_pokerPlus : cc.Node,\r\n        node_pokerNegative : cc.Node,\r\n        node_pokerValue : cc.Node,\r\n        node_minIcon : cc.Node,\r\n        node_maxIcon : cc.Node,\r\n        node_specialIcon : cc.Node,\r\n        frame_pokerUI : cc.SpriteAtlas,             //卡牌基础显示图片集\r\n        font_black : cc.Font,                       //黑色字体\r\n        font_red : cc.Font,                         //红色字体\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        this._init();\r\n\r\n        //this.setPokerInfo(G_TYPE.pokerType.redHeart, 12)\r\n    },\r\n\r\n    _init : function () {\r\n        this._isChoose = false;\r\n\r\n        this._label_value = this.node_pokerValue.getComponent(cc.Label);\r\n        this._sprite_min = this.node_minIcon.getComponent(cc.Sprite);\r\n        this._sprite_max = this.node_maxIcon.getComponent(cc.Sprite);\r\n        this._openPokerTime = G_Config_common.time_pokerOpen;\r\n        this._classic_otherScale = G_Config_classic.scale_noMyPoker;\r\n        this._classic_flyTime = G_Config_classic.time_pokerFly;\r\n        this._classic_moveUp = G_Config_classic.num_pokerUp;\r\n\r\n        this.node_pokerPlus.active = true;\r\n    },\r\n\r\n    bindPlayer : function (player) {\r\n        this._ownPlayer = player;\r\n    },\r\n\r\n    //显示卡牌的背面\r\n    showPokerNegative : function () {\r\n        this.node_pokerPlus.y = 0;\r\n        this.node_pokerPlus.scale = 1;\r\n        //this.node_pokerPlus.active = true;\r\n\r\n        this.node_pokerNegative.active = true;\r\n        this.node_pokerNegative.scale = 1;\r\n    },\r\n    showPokerPlus : function () {\r\n        //this.node_pokerPlus.active = true;\r\n        if (this.node_pokerNegative) this.node_pokerNegative.active = false;\r\n    },\r\n\r\n\r\n    //=========================================\r\n\r\n    //移动卡牌\r\n    flyPoker : function (startPos, targetPos, isMyself) {\r\n        this.onClear();\r\n        this.showPokerNegative();\r\n        this._isMyself = isMyself;\r\n        if(!this._isMyself){\r\n            //不是属于当前玩家的卡牌\r\n            this.node.scale = this._classic_otherScale;\r\n        }\r\n\r\n        this.node.position = startPos;\r\n        var curPosX = targetPos.x;//easeQuarticActionOut\r\n        var act1 = cc.moveTo(this._classic_flyTime, curPosX, targetPos.y);\r\n        var act1 = cc.moveTo(0.4, curPosX, targetPos.y);\r\n        this.node.runAction(cc.sequence(act1, cc.callFunc(this._flyPokerEnd, this)));\r\n    },\r\n    _flyPokerEnd : function () {\r\n        if(this._isMyself)this.openPoker();\r\n\r\n        this._ownPlayer.addFlyEndPoker();\r\n    },\r\n\r\n    //=========================================\r\n\r\n    //打开卡牌\r\n    openPoker : function (callBack) {\r\n        if(this.node_pokerNegative.active === false) return false;\r\n        this.node_pokerNegative.active = false;\r\n        this.node_pokerPlus.active = false;\r\n        this._callFunc = callBack;\r\n        this.showPokerNegative();\r\n\r\n        var rotate1 = cc.scaleTo(this._openPokerTime*0.5, 0, 1);\r\n        this.node_pokerNegative.runAction(cc.sequence(rotate1, cc.callFunc(this._openPoker_showValue, this)));\r\n        return true\r\n    },\r\n    _openPoker_showValue : function () {\r\n        this.node_pokerNegative.active = false;\r\n        this.node_pokerPlus.active = true;\r\n        this.node_pokerPlus.scaleX = 0;\r\n        var rotate1 = cc.scaleTo(this._openPokerTime*0.5, 1, 1);\r\n        this.node_pokerPlus.runAction(cc.sequence(rotate1, cc.callFunc(this._openPoker_end, this)));\r\n    },\r\n    _openPoker_end : function () {\r\n        //openPoker_end-------------------\r\n        if(this._callFunc) this._callFunc();\r\n        this._callFunc = null;\r\n    },\r\n\r\n    //=========================================\r\n\r\n    //打出卡牌结果  actionCallFunc : 卡牌移动到开牌位置后的回调\r\n    //moveToResultPos : function (targetPosY, actionCallFunc) {\r\n    //    this.node_pokerPlus.y = 0;\r\n    //    var pos = cc.p(this.node.x, targetPosY);\r\n    //    if(actionCallFunc)this.node.runAction(cc.sequence(cc.moveTo(G_Config_classic.time_pokerMoveToResult, pos), actionCallFunc));\r\n    //    else this.node.runAction(cc.moveTo(G_Config_classic.time_pokerMoveToResult, pos));\r\n    //},\r\n\r\n    //=========================================\r\n\r\n    //获取一个定制的牌面显示\r\n    setPokerInfo : function (pokerType, pokerValue, isOpen) {\r\n        this.node.active = true;\r\n        this.node_maxIcon.active = true;\r\n        if (this.node_specialIcon) this.node_specialIcon.active = false;\r\n        this._pokerValue = pokerValue;\r\n        this._pokerType = pokerType;\r\n        if(isOpen) this.showPokerPlus();\r\n        else this.showPokerNegative();\r\n\r\n        //确定卡牌类型\r\n        switch (pokerType){\r\n            case G_TYPE.pokerType.block:\r\n                //方块\r\n                this._label_value.font = this.font_red;\r\n                this._sprite_min.spriteFrame = this.frame_pokerUI.getSpriteFrame(G_RES_URL.pokerType.blockMin);\r\n                this._sprite_max.spriteFrame = this.frame_pokerUI.getSpriteFrame(G_RES_URL.pokerType.blockMax);\r\n                break;\r\n            case G_TYPE.pokerType.blackHeart:\r\n                //黑色桃心\r\n                this._label_value.font = this.font_black;\r\n                this._sprite_min.spriteFrame = this.frame_pokerUI.getSpriteFrame(G_RES_URL.pokerType.blackHeartMin);\r\n                this._sprite_max.spriteFrame = this.frame_pokerUI.getSpriteFrame(G_RES_URL.pokerType.blackHeartMax);\r\n                break;\r\n            case G_TYPE.pokerType.redHeart:\r\n                //红色桃心\r\n                this._label_value.font = this.font_red;\r\n                this._sprite_min.spriteFrame = this.frame_pokerUI.getSpriteFrame(G_RES_URL.pokerType.redHeartMin);\r\n                this._sprite_max.spriteFrame = this.frame_pokerUI.getSpriteFrame(G_RES_URL.pokerType.redHeartMax);\r\n                break;\r\n            case G_TYPE.pokerType.flower:\r\n                //梅花\r\n                this._label_value.font = this.font_black;\r\n                this._sprite_min.spriteFrame = this.frame_pokerUI.getSpriteFrame(G_RES_URL.pokerType.flowerMin);\r\n                this._sprite_max.spriteFrame = this.frame_pokerUI.getSpriteFrame(G_RES_URL.pokerType.flowerMax);\r\n                break;\r\n        }\r\n        //确定卡牌的值\r\n        var realyValue;\r\n        switch (pokerValue){\r\n            case 1:\r\n                realyValue = 'A';\r\n                break;\r\n            case 10:\r\n                realyValue = '1';\r\n                break;\r\n            case 11:\r\n                realyValue = 'J';\r\n                // this.node_maxIcon.active = false;\r\n                // this.node_specialIcon.active = true;\r\n                // this.node_specialIcon.getComponent(cc.Sprite).spriteFrame = this.frame_pokerUI.getSpriteFrame(G_RES_URL.pokerType.value_J);\r\n                break;\r\n            case 12:\r\n                realyValue = 'Q';\r\n                // this.node_maxIcon.active = false;\r\n                // this.node_specialIcon.active = true;\r\n                // this.node_specialIcon.getComponent(cc.Sprite).spriteFrame = this.frame_pokerUI.getSpriteFrame(G_RES_URL.pokerType.value_Q);\r\n                break;\r\n            case 13:\r\n                realyValue = 'K';\r\n                // this.node_maxIcon.active = false;\r\n                // this.node_specialIcon.active = true;\r\n                // this.node_specialIcon.getComponent(cc.Sprite).spriteFrame = this.frame_pokerUI.getSpriteFrame(G_RES_URL.pokerType.value_K);\r\n                break;\r\n            default:\r\n                realyValue = pokerValue;\r\n                break;\r\n        }\r\n\r\n        this._label_value.string = realyValue;\r\n    },\r\n\r\n\r\n    //=========================================\r\n\r\n    getPokerValue : function () {\r\n        return this._pokerValue\r\n    },\r\n\r\n    getPokerType : function () {\r\n        return this._pokerType\r\n    },\r\n\r\n    getPokerSize : function () {\r\n        return this.node_pokerNegative.getContentSize();\r\n    },\r\n\r\n    //是否黑色卡牌\r\n    getIsBlack : function () {\r\n        return this.isBlackColor\r\n    },\r\n\r\n    //设置卡牌是否可以点击\r\n    setPokerTouchEnable : function (isEnable) {\r\n        if(isEnable){\r\n            this.node_pokerPlus.on(cc.Node.EventType.TOUCH_START, this._callback_clickPoker, this);\r\n        }else{\r\n            this.node_pokerPlus.off(cc.Node.EventType.TOUCH_START, this._callback_clickPoker, this);\r\n        }\r\n    },\r\n\r\n    //点击卡牌的回调\r\n    _callback_clickPoker : function (event) {\r\n        var poker = event.target;\r\n        if(this._isChoose){\r\n            poker.y -= this._classic_moveUp;\r\n            this._isChoose = false;\r\n            this._ownPlayer.touchThePokerDown();\r\n        }else{\r\n            var value = this.getPokerValue();\r\n            if(value > 10) value = 10;\r\n            var isOk = this._ownPlayer.touchThePokerUp(value);\r\n            if(isOk){\r\n                poker.y += this._classic_moveUp;\r\n                this._isChoose = true;\r\n            }\r\n        }\r\n    },\r\n\r\n    onClear : function () {\r\n        this._isChoose = false;\r\n        this.node.scale = 1;\r\n    },\r\n\r\n    clearAllActions : function () {\r\n        this.node_pokerNegative.stopAllActions();\r\n        this.node_pokerPlus.stopAllActions();\r\n        this.node.stopAllActions();\r\n    },\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    // update: function (dt) {\r\n\r\n    // },\r\n    \r\n    onDestroy : function () {\r\n        //this.setPokerTouchEnable(false);\r\n    }\r\n});\r\n"]}