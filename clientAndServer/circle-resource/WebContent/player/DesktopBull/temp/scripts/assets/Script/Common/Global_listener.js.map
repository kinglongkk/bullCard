{"version":3,"sources":["assets\\Script\\Common\\Global_listener.js"],"names":["module","exports","cc","Class","properties","_dict_listeners","_listenerIndex","_list_delIndex","ctor","registerFunc","eventType","callFunc","listenerName","name","_getListenerIndex","delListen","_whenCancelListener","Object","keys","length","dispatchEventEX","data","listenersList","isValid","indexList","split","listenerIndex","push","splice"],"mappings":";;;;;;AAAA;;AAEAA,OAAOC,OAAP,GAAiBC,GAAGC,KAAH,CAAS;AACtBC,gBAAY;AACRC,yBAAkB,IADV,EAC4C;AACpDC,wBAAiB,IAFT,EAE4C;AACpDC,wBAAiB,IAHT,EADU;;AAOtB;AACAC,UAAM,gBAAY;AACd,aAAKH,eAAL,GAAuB,EAAvB;AACA,aAAKE,cAAL,GAAsB,EAAtB;AACA,aAAKD,cAAL,GAAsB,CAAtB;AACH,KAZqB;;AActB;AACAG,kBAAe,sBAAUC,SAAV,EAAqBC,QAArB,EAA+B;AAC1C,YAAG,CAAC,KAAKN,eAAL,CAAqBK,SAArB,CAAJ,EAAqC,KAAKL,eAAL,CAAqBK,SAArB,IAAkC,EAAlC;AACrC,YAAIE,eAAeD,SAASE,IAAT,GAAc,GAAd,GAAkB,KAAKC,iBAAL,EAArC;AACA,aAAKT,eAAL,CAAqBK,SAArB,EAAgCE,YAAhC,IAAgDD,QAAhD;AACA,eAAOC,YAAP;AACH,KApBqB;;AAsBtB;AACAG,eAAY,mBAAUL,SAAV,EAAqBE,YAArB,EAAmC;AAC3C,YAAG,CAAC,KAAKP,eAAL,CAAqBK,SAArB,CAAJ,EAAqC;AACrC,YAAG,KAAKL,eAAL,CAAqBK,SAArB,EAAgCE,YAAhC,CAAH,EAAiD;AAC7C,iBAAKI,mBAAL,CAAyBJ,YAAzB;AACA;AACA,mBAAO,KAAKP,eAAL,CAAqBK,SAArB,EAAgCE,YAAhC,CAAP;AACA,gBAAGK,OAAOC,IAAP,CAAY,KAAKb,eAAL,CAAqBK,SAArB,CAAZ,EAA6CS,MAA7C,GAAsD,CAAzD,EAA4D,KAAKd,eAAL,CAAqBK,SAArB,IAAkC,IAAlC;AAC/D;AACJ,KA/BqB;;AAiCtB;AACAU,qBAAkB,yBAAUV,SAAV,EAAqBW,IAArB,EAA2B;AACzC,YAAIC,gBAAgB,KAAKjB,eAAL,CAAqBK,SAArB,CAApB;AACA,YAAGY,aAAH,EAAiB;AACb;AACA,gBAAIX,QAAJ;AACA,iBAAI,IAAIE,IAAR,IAAgBS,aAAhB,EAA8B;AAC1BX,2BAAWW,cAAcT,IAAd,CAAX;AACA,oBAAGX,GAAGqB,OAAH,CAAWZ,QAAX,CAAH,EAAwB;AACpBA,6BAASE,IAAT,EAAeQ,IAAf;AACH;AACJ;AACJ;AACJ,KA9CqB;;AAgDtBL,yBAAsB,6BAAUJ,YAAV,EAAwB;AAC1C,YAAIY,YAAYZ,aAAaa,KAAb,CAAmB,GAAnB,CAAhB;AACA,YAAIC,gBAAgBF,UAAUA,UAAUL,MAAV,GAAmB,CAA7B,CAApB;AACA,aAAKZ,cAAL,CAAoBoB,IAApB,CAAyBD,aAAzB;AACH,KApDqB;AAqDtB;AACAZ,uBAAoB,6BAAY;AAC5B,YAAG,KAAKP,cAAL,CAAoB,CAApB,CAAH,EAA0B;AACtB,mBAAO,KAAKA,cAAL,CAAoBqB,MAApB,CAA2B,CAA3B,EAA6B,CAA7B,CAAP;AACH,SAFD,MAEK;AACD,iBAAKtB,cAAL,IAAuB,CAAvB;AACA,mBAAO,KAAKA,cAAZ;AACH;AACJ;;AA7DqB,CAAT,CAAjB","file":"unknown","sourcesContent":["//全局的事件监听与派送\r\n\r\nmodule.exports = cc.Class({\r\n    properties: {\r\n        _dict_listeners : null,                             //所有监听\r\n        _listenerIndex : null,                              //监听索引\r\n        _list_delIndex : null,                              //可用的索引\r\n    },\r\n\r\n    // use this for initialization\r\n    ctor: function () {\r\n        this._dict_listeners = {};\r\n        this._list_delIndex = [];\r\n        this._listenerIndex = 0;\r\n    },\r\n\r\n    //增加监听\r\n    registerFunc : function (eventType, callFunc) {\r\n        if(!this._dict_listeners[eventType]) this._dict_listeners[eventType] = {};\r\n        var listenerName = callFunc.name+'_'+this._getListenerIndex();\r\n        this._dict_listeners[eventType][listenerName] = callFunc;\r\n        return listenerName\r\n    },\r\n\r\n    //去除监听\r\n    delListen : function (eventType, listenerName) {\r\n        if(!this._dict_listeners[eventType]) return;\r\n        if(this._dict_listeners[eventType][listenerName]){\r\n            this._whenCancelListener(listenerName);\r\n            //有这个监听\r\n            delete this._dict_listeners[eventType][listenerName];\r\n            if(Object.keys(this._dict_listeners[eventType]).length < 1) this._dict_listeners[eventType] = null;\r\n        }\r\n    },\r\n\r\n    //派送监听的事件\r\n    dispatchEventEX : function (eventType, data) {\r\n        var listenersList = this._dict_listeners[eventType];\r\n        if(listenersList){\r\n            //存在监听对象\r\n            var callFunc;\r\n            for(var name in listenersList){\r\n                callFunc = listenersList[name];\r\n                if(cc.isValid(callFunc)){\r\n                    callFunc(name, data);\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    _whenCancelListener : function (listenerName) {\r\n        var indexList = listenerName.split('_');\r\n        var listenerIndex = indexList[indexList.length - 1];\r\n        this._list_delIndex.push(listenerIndex);\r\n    },\r\n    //获取可用的监听索引\r\n    _getListenerIndex : function () {\r\n        if(this._list_delIndex[0]){\r\n            return this._list_delIndex.splice(0,1);\r\n        }else{\r\n            this._listenerIndex += 1;\r\n            return this._listenerIndex\r\n        }\r\n    },\r\n\r\n});\r\n"]}